Changes in version 2.6

  o Modified the mexhaz and predict.mexhaz functions so that they can be used to model/predict the marginal rate when the dataset corresponds to recurrent events expressed in calendar time.

  o Added some background functions to provide an interface with the xhaz package.

Changes in version 2.5

  o Corrected the behaviour of the mexhaz function when the random variable is a factor with missing levels (used droplevels()).

  o Modified the predict.mexhaz function to include (i) the correct calculation of cluster-specific posterior predictions and (ii) conditional predictions for a specific quantile of the distribution of the random effect. For (i), this led to the addition of an argument 'dataset' to the predict.mexhaz function and of an argument 'keep.data' to the mexhaz function (cluster-specific posterior predictions require access to the dataset used to fit the model); for (ii), this led to the addition of an argument 'quant.rdm' to the predict.mexhaz function.
  
  o Modified the adjsurv and riskfunc functions accordingly: addition of arguments 'dataset', 'quant.rdm', 'quant.rdm.0', 'cluster', and 'cluster.0'; suppression of argument 'clust.name').

  o Slightly modified the behaviour of the summary.mexhaz and print.summary.mexhaz functions.

  o Corrected the behaviour of the vcov.mexhaz function so that it does not mask the original vcov function.

Changes in version 2.4

  o Added missing protoptypes to some C function definitions.

  o Added an argument testInit to the mexhaz function to let the user choose whether several vectors of initial values should be tested in case of failed convergence.

Changes in version 2.3

  o Corrected a problem in the formula for the Hessian of the likelihood in the mexhazEgh function.

Changes in version 2.2

  o Corrected bugs in the marginSurvhaz, predict.mexhaz, and mexhazEgh functions.

  o Added a function to compute hazard ratios and risk ratios.

  o Added a function to compute direct adjusted survival estimates.

Changes in version 2.1

  o Implemented marginal predictions for models including a random intercept.

  o Implemented the correct Wald test for the model coefficients.
  
  o Corrected a problem of scope with the update.mexhaz() function when used inside another function.
  
Changes in Version 2.0

  o For the fixed effect (overall and excess) hazard model as well as for the random effect hazard model (overall only), the default optimisation procedure is Newton-Raphson (from nlm) based on the analytic gradient and Hessian. This greatly improves computational time especially for large datasets. The previous behaviour of the mexhaz function can still be obtained by setting the argument 'exactGradHess' to FALSE.
  
  o The gradient and Hessian of the likelihood evaluated at the estimated parameters are now returned in the mexhaz object.

Changes in Version 1.11
  
  o Added a reference to the JSS article.
  
  o Made a small correction in the update() function.

Changes in Version 1.10
  
  o Corrected a memory issue in the C source code.

Changes in Version 1.9
  
  o Changed the way the Weibull hazard and cumulative hazard rate are
  calculated: now, the mexhaz() and predict.mexhaz() functions
  directly call a C function, like for the other hazard rates.

  o Added a vignette describing the package use based on an article accepted
  for publication in JSS.

Changes in Version 1.8
  
  o Fixed a bug in the predict.mexhaz() function that resulted in
  missing values for the variances of the logarithm of the hazard and
  of the cumulative hazard when confidence intervals are estimated by
  Monte Carlo simulations (Thanks Johann!).

  o Initial values for the logarithm of the parameters of the Weibull
  hazard set to 0.1.

Changes in Version 1.7
  
  o Implemented the correct version of the shared frailty model for left
  truncated data.

  o Default value of argument 'verbose' set to 0.

  o Initial values for the parameters of the Weibull hazard set to 0.1.

Changes in Version 1.6
  
  o Fixed a bug in the mexhaz() function that resulted in an error of
  the function when the event variable was 1 for everyone.

  o Fixed a bug in the summary() method for objects of class 'mexhaz'.

  o Fixed a bug in the update() method for objects of class 'mexhaz'
  (provided a default value for the degree of the B-spline).

  o Modified the mexhaz() function so that the counting process input
  style can be used when fitting a random effect model (stop() changed
  into a warning()).

  o Added the method lines() for objects of class 'predMexhaz' and
  changed the default plotting type for the points() method.

Changes in Version 1.5
  
  o Fixed a bug in the mexhaz() function that resulted in an error of
  the function when the covariance matrix could not be estimated. Now,
  the function runs until completion and produces a covariance matrix
  filled with NA values in case it could not be estimated.

  o Added methods fixef() and vcov() for objects of class 'mexhaz'.

  o Update of the summary() method for objects of class 'mexhaz' and
  addition of a print() methods for objects of class 'summary.mexhaz'.

Changes in Version 1.4
  
  o Correction of a mistake in the predict.mexhaz() function that
  resulted in providing the limits of the confidence intervals for
  survival when delta.type.s="log" (CI for survival based on a
  Wald-type CI for the cumulative hazard) in the wrong order.

  o Change in the parametrisation of the Weibull hazard (the
  coefficients now correspond to the logarithm of the parameters of
  the Weibull distribution, thus allowing unconstrained optimisation).

  o Change in the parametrisation of the coefficient related to the
  random effect (the coefficient now corresponds to the logarithm of
  the standard deviation of the distribution of the random effect,
  allowing unconstrained optimisation and consistent with future
  multidimensional implementations).