Changes in Version 1.7
  
  Implemented the correct version of the shared frailty model for left
  truncated data.

  Default value of argument 'verbose' set to 0.

  Initial values for the parameters of the Weibull hazard set to log(0.1).


Changes in Version 1.6
  
  Fixed a bug in the mexhaz() function that resulted in an error of
  the function when the event variable was 1 for everyone.

  Fixed a bug in the summary() method for objects of class 'mexhaz'.

  Fixed a bug in the update() method for objects of class 'mexhaz'
  (provided a default value for the degree of the B-spline).

  Modified the mexhaz() function so that the counting process input
  style can be used when fitting a random effect model (stop() changed
  into a warning()).

  Added the method lines() for objects of class 'predMexhaz' and
  changed the default plotting type for the points() method.


Changes in Version 1.5
  
  Fixed a bug in the mexhaz() function that resulted in an error of
  the function when the covariance matrix could not be estimated. Now,
  the function runs until completion and produces a covariance matrix
  filled with NA values in case it could not be estimated.

  Added methods fixef() and vcov() for objects of class 'mexhaz'.

  Update of the summary() method for objects of class 'mexhaz' and
  addition of a print() methods for objects of class 'summary.mexhaz'.


Changes in Version 1.4
  
  Correction of a mistake in the predict.mexhaz() function that
  resulted in providing the limits of the confidence intervals for
  survival when delta.type.s="log" (CI for survival based on a
  Wald-type CI for the cumulative hazard) in the wrong order.

  Change in the parametrisation of the Weibull hazard (the
  coefficients now correspond to the logarithm of the parameters of
  the Weibull distribution, thus allowing unconstrained optimisation).

  Change in the parametrisation of the coefficient related to the
  random effect (the coefficient now corresponds to the logarithm of
  the standard deviation of the distribution of the random effect,
  allowing unconstrained optimisation and consistent with future
  multidimensional implementations).

Changes in Version 1.3
  
  Correction of an off-by-one error in the C functions used to handle
  hazards described by the logarithm of a restricted cubic spline that
  may cause an R session crash.

Changes in Version 1.2

  From a general point a view, the code of almost all functions has
  been modified in order to improve its clarity (suppression of
  redundant calculations and unnecessary variables, etc.) without
  modifying the obtained results. Besides, the following changes have
  been made:

  o The 'mexhaz' function now accepts counting process style input for
  the follow-up time that allows the modelling of survival data with
  delayed entries.

  o The 'base' argument of the 'mexhaz' function now accepts a new
  value ('exp.ns') that allows the modelling of the logarithm of the
  baseline hazard by a restricted cubic spline.

  o The 'mexhaz' function now accepts a new argument named 'numHess'
  that allows the estimation of the Hessian by the 'hessian' function
  of the 'numDeriv' package.

  o The 'bo.max' argument of the 'mexhaz' function has been replaced
  by a new argument named 'bound' that allows the specification of the
  boundary knots of spline functions.

  o The following objects have been added to the output of the
  'mexhaz' function: (i) the vector of initial values of the
  parameters ('init'), (ii) the shrinkage estimators with their
  standard errors ('mu.hat'), (iii) the variances of the shrinkage
  estimators ('var.mu.hat'), (iv) the covariances between each
  shrinkage estimator, the fixed effect parameter estimates
  ('vcov.fix.mu.hat') and (v) the name of the variable representing
  the expected hazard (for excess hazard regression models). (ii)-(iv)
  are only relevant when a random effect is present. (iii) and (iv)
  are used by the 'predict.mexhaz' function to obtain cluster-specific
  predictions with appropriate confidence intervals.

  o The 'predMexhaz' has been replaced by a function named
  'predict.mexhaz' and now accepts new arguments: (i) 'cluster' allows
  the estimation of cluster-specific predictions (only relevant when a
  random effect is present), (ii) 'include.gradient' allows the
  function to return the gradient of the logarithm of the hazard and
  the gradient of the logarithm of the cumulative hazard, (iii)
  'level' designates the level of confidence to be used to calculate
  confidence intervals, (iv) 'delta.type.h' and 'delta.type.s' allow
  the user to choose the type of confidence interval to be calculated
  for the hazard and the survival when using the Delta Method.
  
  o The 'predict.mexhaz' function also returns the covariance matrix
  used for the estimation of the variances and confidence intervals of
  the hazard and survival.

  o A function 'update.mexhaz' applicable to objects of class 'mexhaz'
  has been added. It allows the user to update a mexhaz model by
  changing one or several arguments (not necessarily the formula) of
  the original model.

  o A method 'ranef.mexhaz' applicable to objects of class 'mexhaz' has been
  added. It allows the extraction of the cluster-specific random
  effects with their standard errors.

  o A bug that hampered model convergence for big datasets has been
  corrected in the 'FrailtyAdapt.c' file.



Changes in Version 1.1

  Majors changes (no backward compatibility)! See help files for a
  full explanation of the arguments and outputs of the functions.

  o The 'bound' argument of the 'mexhaz' function has been renamed
  'bo.max'.

  o The 'pl.nlm' argument of the 'mexhaz' function has been suppressed
  (it is still possible to print information from the nlm optimisation
  procedure by supplying the argument 'print.level' which will be
  directly passed to nlm).

  o The output of the 'mexhaz' function has been modified to
  facilitate the application of S3 methods. The object returned by the
  'mexhaz' function is a list of class 'mexhaz'.

  o Methods plot() and summary() for an object of class 'mexhaz' have
  been added.

  o The 'pred.mexhaz' function has been renamed 'predMexhaz' and its
  arguments have been modified: the 't' and 'nb.time.pts' have been
  replaced by a single argument 'time.pts' which requests the user to
  give a vector of time points at which the predictions are to be
  made; the 'delta' argument has been replaced by a 'conf.int'
  argument which allows the user to select the method for confidence
  limits calculation ("none", "delta", or "simul").

  o A bug in the 'pred.mexhaz' (now, 'predMexhaz') function has been
  fixed: in the previous version, supplying a data.frame of
  covariables containing more than one line AND multiple time points
  (that is, trying to predict hazard/survival for different
  individuals at different time points) resulted in an abortion of the
  current R session. The problem has been solved by preventing such a
  situation to occur.

  o The Delta Method is now available for models using a B-spline of
  degree 1 for the logarithm of the baseline hazard and for models
  using a piecewise constant hazard.

  o The output of the 'predMexhaz' function has been modified to
  facilitate the application of S3 methods. The object returned by the
  'predMexhaz' function is a list of class 'predMexhaz'.
        

  o Methods print(), plot() and points() for an object of class
  'predMexhaz' have been added.
    
  o The function 'graph.mexhaz' has been suppressed (the methods
  plot() and points() are to be used instead).